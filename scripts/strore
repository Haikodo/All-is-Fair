class NPC {
        constructor(name, personality, experience, loyalty, background) {
            this.name = name;
            this.personality = personality;
            this.experience = experience;
            this.loyalty = loyalty;
            this.background = background;
        }

        gainExperience() {
            this.experience++;
        }

        adjustLoyalty(amount) {
            this.loyalty += amount;
        }

        getIntroduction() {
            return `${this.name}, a ${this.background}, seems ${this.personality.toLowerCase()}.`;
        }
    }

    // Function to save NPCs to localStorage
    function saveNPC(npc) {
        npcList.push(npc);
        localStorage.setItem("npcList", JSON.stringify(npcList));
    }

    // Function to load NPCs from localStorage
    function loadNPCs() {
        let storedNPCs = localStorage.getItem("npcList");
        if (storedNPCs) {
            npcList = JSON.parse(storedNPCs).map(npcData => new NPC(
                npcData.name,
                npcData.personality,
                npcData.experience,
                npcData.loyalty,
                npcData.background
            ));
        }
    }

    // Get a random NPC name
    function getRandomName() {
        const names = ["Marcus", "Lucius", "Felix", "Cassius", "Tiberius", "Gaius", "Julius", "Vitus", "Darius", "Quintus"];
        return names[Math.floor(Math.random() * names.length)];
    }

    // Get a random NPC personality
    function getRandomPersonality() {
        const personalities = ["Brave", "Cunning", "Hot-headed", "Loyal", "Cowardly", "Vengeful", "Stoic", "Sarcastic"];
        return personalities[Math.floor(Math.random() * personalities.length)];
    }

    // Get a random NPC background
    function getRandomBackground() {
        const backgrounds = ["A seasoned veteran", "A farmhand turned soldier", "A former bandit seeking redemption", "A disgraced son of a noble house", "A runaway slave who joined the army", "A scholar who took up arms"];
        return backgrounds[Math.floor(Math.random() * backgrounds.length)];
    }